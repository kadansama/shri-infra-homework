name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to deploy (e.g. 1, 1_fix)'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      CLOUD_ID: b1gr908prd2uo9dahreb
      FOLDER_ID: b1gre28ftdr7otqsp4c7
      REGISTRY_NAME: shri-infra-registry
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Yandex.Cloud CLI
        run: |
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Verify yc CLI is installed
        run: |
          which yc
          yc --version

      - name: Authenticate with Yandex Cloud
        env:
          YC_SA_KEY_JSON: ${{ secrets.YC_SA_KEY_JSON }}
        run: |
          echo "$YC_SA_KEY_JSON" > key.json
          yc config set service-account-key key.json
          yc config set cloud-id "$CLOUD_ID"
          yc config set folder-id "$FOLDER_ID"

      - name: Check image exists in Yandex Container Registry
        run: |
          IMAGE="cr.yandex/$REGISTRY_NAME/app:${RELEASE_VERSION}_latest"
          echo "Checking image: $IMAGE"

          IMAGE_EXISTS=$(yc container image list --registry-name "$REGISTRY_NAME" --format json | jq -r \
            --arg tag "${RELEASE_VERSION}_latest" \
            '.[] | select(.tags[]? == $tag) | .name')

          if [ -z "$IMAGE_EXISTS" ]; then
            echo "Image with tag ${RELEASE_VERSION}_latest not found in Yandex Container Registry!"
            exit 1
          else
            echo "Image found: $IMAGE_EXISTS"
          fi

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        env:
          REGISTRY_NAME: ${{ env.REGISTRY_NAME }}
          RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_SSH_PRIVATE_KEY }}
          script: |
            IMAGE="cr.yandex/${REGISTRY_NAME}/app:${RELEASE_VERSION}_latest"

            docker pull "$IMAGE"

            docker stop shri-infra || true
            docker rm shri-infra || true

            docker run -d --name shri-infra -p 3000:3000 "$IMAGE"

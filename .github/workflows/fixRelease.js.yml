name: Fix Release Flow

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to fix (e.g. 1, 2, etc.)'
        required: true
        type: string

env:
  REGISTRY_ID: "crph4codaco7ibpqes0d" 
  VM_IP: "158.160.171.190"
  SSH_USER: "ubuntu"
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  fix-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Работает с существующей релизной веткой
          ref: releases/${{ github.event.inputs.release_version }}

      # Далее идут стандартные шаги установки и проверок
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linter
        run: npm run lint

      # Аутентификация в Yandex Container Registry
      - name: Login to Yandex Container Registry
        run: |
          # ЗАМЕНИТЕ содержимое секрета YC_SA_KEY на ключ сервисного аккаунта
          echo ${{ secrets.YC_SA_KEY_JSON }} | docker login \
            --username json_key \
            --password-stdin \
            cr.yandex

      # Сборка и публикация образа
      - name: Build and push Docker image
        run: |
          docker build -t cr.yandex/${{ env.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} .
          docker tag cr.yandex/${{ env.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }} cr.yandex/${{ env.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest
          docker push cr.yandex/${{ env.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          docker push cr.yandex/${{ env.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_latest

      # Получение истории коммитов для комментария
      - name: Get commit history
        id: commit-history
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 --match "${{ github.event.inputs.release_version }}*" 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --oneline --no-decorate main..HEAD)
          else
            COMMITS=$(git log --oneline --no-decorate $PREV_TAG..HEAD)
          fi
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Создание тега для фикса
      - name: Create fix tag
        run: |
          git tag ${{ github.event.inputs.release_version }}.fix${{ github.run_number }}
          git push origin ${{ github.event.inputs.release_version }}.fix${{ github.run_number }}

      # Добавление комментария в issue релиза
      - name: Add comment to release issue
        uses: actions/github-script@v6
        with:
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['release']
            });
            
            const releaseIssue = issues.data.find(issue => 
              issue.title.includes(`Release ${{ github.event.inputs.release_version }}`)
            );
            
            if (releaseIssue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: releaseIssue.number,
                body: `### Fix ${{ github.run_number }} applied to release ${{ github.event.inputs.release_version }}\n\n` +
                      `**Date:** ${new Date().toISOString()}\n` +
                      `**Author:** ${context.actor}\n` +
                      `**Commits since last tag:**\n\`\`\`\n${{ steps.commit-history.outputs.commits }}\n\`\`\`\n` +
                      `**Docker image:** cr.yandex/${{ env.REGISTRY_ID }}/app:${{ github.event.inputs.release_version }}_fix${{ github.run_number }}`
              });
            }